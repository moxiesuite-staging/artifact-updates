!define directory(name) class name << (D,cyan) Directory >>
!define file(name) class name << (F,turquoise) File >>

!define object(name) class name << (O,lawngreen) Data Object >>
!define enum(name) class name << (E,yellow) Enum >>
!define resource(name) class name << (R,orchid) Resource >>
!define collection(name) class name << (C,deeppink) Collection >>

'
' Resources
'

!ifdef SHOW_CONTRACT
  resource(Contract) {
    + name : String
    + abi : ABI
    + interface : ContractInterface
    + sourceContract : Maybe<SourceContract>
  }
!endif

!ifdef SHOW_INSTANCE
  !define SHOW_INSTANCE_CREATION
  !define SHOW_LINKED_BYTECODE

  resource(ContractInstance) {
    + address : Address
    + network : Network
    + creation : Maybe<ContractInstanceCreation>
    + contract : Maybe<Contract>
    + callBytecode : LinkedBytecode
  }

  ContractInstance *-right- "0..1" ContractInstanceCreation
!endif

!ifdef SHOW_INTERFACE
  resource(ContractInterface) {
    + constructor : Maybe<ConstructorInterface>
    + fallback : Maybe<FallbackInterface>
    + functions : Set<FunctionInterface>
    + events : Set<EventInterface>
  }

  ContractInterface o-- "n" ContractInterface

  !ifdef SHOW_INTERFACE_INTERNAL
    object(ConstructorInterface) {
      + inputs : Array<Parameter>
      + stateMutability : StateMutability
    }

    object(FallbackInterface) {
      + stateMutability : StateMutability
    }

    object(FunctionInterface) {
      + name : String
      + inputs : Array<Parameter>
      + outputs : Array<Parameter>
      + stateMutability : StateMutability
    }

    object(EventInterface) {
      + name : String
      + inputs : Array<EventParameter>
      + anonymous : Boolean
    }

    ContractInterface *-- "0..1" ConstructorInterface
    ContractInterface *-- "0..1" FallbackInterface
    ContractInterface *-- "n" FunctionInterface
    ContractInterface *-- "n" EventInterface

    object(Parameter) {
      + name : String
      + type : Type
    }

    object(EventParameter) {
      + name : String
      + type : Type
      + indexed : Boolean
    }

    enum(StateMutability) {
      + pure
      + view
      + nonpayable
      + payable
    }

    ConstructorInterface *-- "n" Parameter
    ConstructorInterface *-- "1" StateMutability

    FallbackInterface *-- "1" StateMutability

    FunctionInterface *-- "n" Parameter
    FunctionInterface *-- "1" StateMutability

    EventInterface *-- "n" EventParameter
  !endif
!endif

!ifdef SHOW_CONSTRUCTOR
  !define SHOW_LINKED_BYTECODE

  resource(ContractConstructor) {
    + contract : Maybe<Contract>
    + createBytecode : LinkedBytecode
  }
!endif


!ifdef SHOW_BYTECODE
  !define SHOW_LINK_REFERENCE

  resource(Bytecode) {
    + bytes: Array<Byte>
    + instructions: Array<Instruction>
    + linkReferences : Set<LinkReference>
  }

  !ifdef SHOW_SOURCE_MAP || SHOW_BYTECODE_INTERNAL
    object(Instruction) {
      + programCounter: String
      + opcode: Integer
      + pushData: String
      + meta: InstructionMeta
    }

    object(InstructionMeta) {
      + cost: Integer
      + pops: Integer
      + pushes: Integer
      + dynamic: Integer
    }

    Instruction *-- "1" InstructionMeta
    Bytecode *-- "n" Instruction
  !endif
!endif

!ifdef SHOW_SOURCE
  resource(Source) {
    + contents : String
    + sourcePath : String
  }
!endif



!ifdef SHOW_COMPILATION
  !define SHOW_SOURCE_CONTRACT

  resource(Compilation) {
    + compiler : Compiler
    + sources : Array<Maybe<Source>>
    + contracts : Array<SourceContract>
  }

  object(Compiler) {
    + name : String
    + version : String
    + settings : Object
  }

  Compilation *-- "1" Compiler
  SourceContract "n" --* Compilation
!endif

!ifdef SHOW_NETWORK
  resource(Network) {
    + name : String
    + networkId : NetworkID
    + fork : Maybe<Network>
    + historicBlock: Block
  }


  !ifdef SHOW_NETWORK_INTERNAL
    object(Block) {
      + height : Integer
      + hash : BlockHash
    }

    Network o-- "0..1" Network : <<refines>>
    Network *-left- "1" Block
  !endif
!endif



'
' Shared Data Objects
'

!ifdef (SHOW_BYTECODE && SHOW_INSTANCE) || (SHOW_BYTECODE && SHOW_CONSTRUCTOR)
  !define SHOW_LINKED_BYTECODE
!endif

!ifdef SHOW_LINKED_BYTECODE
  !define SHOW_LINK_VALUE

  object(LinkedBytecode) {
    + bytecode : Bytecode
    + linkValues : Set<LinkValue>
  }
!endif

!ifdef SHOW_INSTANCE_CREATION
  object(ContractInstanceCreation) {
    + transactionHash : TransactionHash
    + constructor : ContractConstructor
    + constructorArgs : Array<Value>
  }
!endif

!ifdef SHOW_LINK_VALUE
  !define SHOW_LINK_REFERENCE
  object(LinkValue) {
    + linkReference : LinkReference
    + value : Bytes
  }
!endif

!ifdef SHOW_LINK_REFERENCE
  object(LinkReference) {
    + offsets : Array<ByteOffset>
    + length : Integer
  }
!endif

!ifdef SHOW_SOURCE_MAP
  object(SourceMap) {
    + rawSourceMap : String
    + sources : Array<Maybe<Source>>
    + bytecode : Bytecode
  }

  object(SourceRange) {
    + source : Source
    + start : ByteOffset
    + length : Length
    + meta : Object
  }

  SourceMap *-- "n" SourceRange
!endif


!ifdef SHOW_SOURCE_CONTRACT
  object(SourceContract) {
    + name : String
    + source : Source
    + ast : AST
  }
!endif

!ifdef SHOW_ABI
  object(ABI) {
    + json : String
  }
!endif

!ifdef SHOW_AST
  object(AST) {
    + json : String
  }
!endif

'
' Relations
'

!ifdef SHOW_CONTRACT && SHOW_ABI
  Contract *-right- "1" ABI
!endif

!ifdef SHOW_CONTRACT && SHOW_INSTANCE
  ContractInstance "n" o-- "0..1" Contract
!endif

!ifdef SHOW_CONTRACT && SHOW_CONSTRUCTOR
  ContractConstructor "1" o-- "0..1" Contract
!endif

!ifdef SHOW_CONTRACT && SHOW_INTERFACE
  Contract o-- "1" ContractInterface
!endif

!ifdef SHOW_CONTRACT && SHOW_SOURCE_CONTRACT
  Contract o-- "0..1" SourceContract
!endif

!ifdef SHOW_BYTECODE && SHOW_LINK_REFERENCE
  LinkReference "n" --* Bytecode
!endif

!ifdef SHOW_LINKED_BYTECODE && SHOW_BYTECODE
  LinkedBytecode o-- "1" Bytecode
!endif

!ifdef SHOW_LINKED_BYTECODE && SHOW_LINK_VALUE
  LinkedBytecode *-- "n" LinkValue
!endif


!ifdef SHOW_SOURCE_CONTRACT && SHOW_SOURCE
  SourceContract o-- "1" Source
!endif

!ifdef SHOW_INSTANCE && SHOW_NETWORK
  Network "1" --o ContractInstance
!endif

!ifdef SHOW_INSTANCE_CREATION && SHOW_CONSTRUCTOR
  ContractInstanceCreation o-right- "1" ContractConstructor
!endif

!ifdef SHOW_INSTANCE && SHOW_LINKED_BYTECODE
  ContractInstance *-- "1" LinkedBytecode
!endif

!ifdef SHOW_CONSTRUCTOR && SHOW_LINKED_BYTECODE
  ContractConstructor *-- "1" LinkedBytecode
!endif

!ifdef SHOW_COMPILATION && SHOW_SOURCE
  Compilation o-right- "n" Source
!endif

!ifdef SHOW_COMPILATION
  ' compilation outputs

  !ifdef SHOW_EFFECTS
    !ifdef SHOW_CONTRACT
    Compilation ..|> Contract : <<effects>>
    !endif

    !ifdef SHOW_AST
    Compilation ..|> AST : <<effects>>
    !endif

    !ifdef SHOW_BYTECODE
    Compilation ..|> Bytecode : <<effects>>
    !endif


    !ifdef SHOW_SOURCE_MAP
    Compilation ..|> SourceMap : <<effects>>
    !endif
  !endif

!endif


!ifdef SHOW_COMPILATION && SHOW_SOURCE_MAP
  Compilation *-- "n" SourceMap
!endif


!ifdef SHOW_SOURCE_CONTRACT && SHOW_AST
  SourceContract *-right- "0..1" AST
!endif

!ifdef SHOW_SOURCE_MAP && SHOW_BYTECODE
  SourceMap o-right- "1" Bytecode
  SourceRange o-right- "1" Instruction
!endif

!ifdef SHOW_SOURCE_MAP && SHOW_SOURCE
  Source "1" --o SourceRange
!endif

!ifdef SHOW_LINK_VALUE && SHOW_LINK_REFERENCE
  LinkValue ..> "1" LinkReference
!endif
