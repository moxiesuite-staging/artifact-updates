@startuml

!define directory(name) class name << (D,cyan) Directory >>
!define file(name) class name << (F,turquoise) File >>
!define object(name) class name << (O,orchid) Object >>
!define collection(name) class name << (C,deeppink) Collection >>

directory(Project) {
 - resolve(name : String) : Artifact
 - resolve(name : String, network : String) : Artifact
}


directory(Network) {
 - name : String
}

file(Artifact) {
 - JSON
}

collection(Snapshots) {
 - snapshots : Map<String => Snapshot>
 - currentId : String
 - getById(id : String) : Snapshot
 - getByBytecode(bytecode : String) : Snapshot
}

object(Source) {
 - sourcePath : String
 - source : String
 - ast : AST
}

abstract class Contract {
 - name : String
 - snapshots : Snapshots
 - links : Map<String => LinkValue>
 - abi()
}

class Instance {
 - address
 - transactionHash
 - constructorArgs
 __
 - methods() : MethodsInterface
 - events() : EventsInterface
 - sendTransaction() : TransactionInterface
 - send()
 ..
 - type() : Type
}

class Type {
 __
 - link(name : String, value : String)
 ..
 - new() : Promise<Instance>
 - at(address : String) : Instance
}

object(Snapshot) {
 - {field} id
 - abi : ABI
 - callBytecode : Bytecode
 - createBytecode : Bytecode
 - compiler : Compiler
 - sources : Array<Source>
}

object(Compiler) {
 - name : String
 - version : String
 - settings : Object
}

object(Bytecode) {
 - unlinkedBinary : String
 - sourceMap : SourceMap
 - linkReferences : Map<String => LinkReference>
}

object(SourceMap) {
 - sourceMap : String
}

object(LinkReference) {
 - name : String
 - offsets : Array<Integer>
 - length : Integer
}

object(LinkValue) {
 - value : String
}

object(AST) {
 - root : ASTNode
}

Project *-- "n" Artifact : build/contracts/
Project *-right- "n" Network : build/networks/
Network *-- "n" Artifact

Artifact *-right- "1" Contract

Instance ..|> Contract
Type ..|> Contract

Contract *-down- "1" Snapshots
Contract *-right- "n" LinkValue : maps by name


Snapshots o-- "1" Snapshot : current
Snapshots *-down- "n" Snapshot : all


Snapshot *-right- "2" Bytecode
Snapshot *-- "1" Compiler
Snapshot *-left- "n" Source

Source *-- "1" AST

Bytecode *-- "1" SourceMap
Bytecode *-up- "n" LinkReference : missing by name


LinkValue ..> LinkReference : <<resolves>>

@enduml
